volumes:
  database-data:
secrets:
  certificate-keys:
    file: certificate-keys/keys.pfx
  certificate-keys-password:
    file: certificate-keys/password
  certificate-messaging:
    file: certificate-messaging/messaging.pfx
  certificate-messaging-password:
    file: certificate-messaging/password
  database-password:
    file: database/password
  initialize-script:
    file: database/initialize-script.sql
services:
  database:
    entrypoint: >
      sh -c "
      docker-entrypoint.sh postgres &
      until pg_isready -p 6400 -U postgres; do
        sleep 2;
      done;
      PGPASSWORD=$(cat /run/secrets/database-password) psql -d messaging -f /run/secrets/initialize-script -p 6400 -U postgres;
      wait"
    environment:
      - PGPORT=6400
      - POSTGRES_DB=messaging
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
      - POSTGRES_PASSWORD_FILE=/run/secrets/database-password
      - POSTGRES_USER=postgres
    ports:
      - 6400:6400
    healthcheck:
      interval: 5s
      retries: 5
      test: pg_isready -p 6400 -U postgres
      timeout: 5s
    image: postgres:latest
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data
    secrets:
      - database-password
      - initialize-script
  server:
    build:
      context: .
      target: runtime
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 12800:12800
    secrets:
      - certificate-keys
      - certificate-keys-password
      - certificate-messaging
      - certificate-messaging-password